//SCSS variables are information about icon's compiled state, stored under its original file name
$hexahedron-ic-name: 'hexahedron-ic';
$hexahedron-ic-x: 0px;
$hexahedron-ic-y: 0px;
$hexahedron-ic-offset-x: 0px;
$hexahedron-ic-offset-y: 0px;
$hexahedron-ic-width: 43px;
$hexahedron-ic-height: 49px;
$hexahedron-ic-total-width: 43px;
$hexahedron-ic-total-height: 49px;
$hexahedron-ic-image: '../img/sprite.png';
$hexahedron-ic: (0px, 0px, 0px, 0px, 43px, 49px, 43px, 49px, '../img/sprite.png', 'hexahedron-ic', );
$spritesheet-width: 43px;
$spritesheet-height: 49px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($hexahedron-ic, );
$spritesheet: (43px, 49px, '../img/sprite.png', $spritesheet-sprites, );

//The provided mixins are intended to be used with the array-like variables
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

//The `sprites` mixin generates identical output to the CSS template but can be overridden inside of SCSS
//@include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
